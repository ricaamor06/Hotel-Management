
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author marav
 */
public class Mainframe extends javax.swing.JFrame {

    /**
     * Creates new form Mainframe
     */
    public Mainframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReservation = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfGN = new javax.swing.JTextField();
        tfCI = new javax.swing.JTextField();
        tfRN = new javax.swing.JTextField();
        tfCOUT = new javax.swing.JTextField();
        tfCIN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tfRID = new javax.swing.JTextField();
        tfRT = new javax.swing.JTextField();
        tfRP = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        tableReservation.setBackground(new java.awt.Color(255, 204, 204));
        tableReservation.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        tableReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reservation_ID", "Guest_Name", "Contacts", "Room_Number", "Check_IN", "Check_OUT"
            }
        ));
        jScrollPane1.setViewportView(tableReservation);

        jLabel1.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reservation ID:");

        tfGN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfGNActionPerformed(evt);
            }
        });

        tfCI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCIActionPerformed(evt);
            }
        });

        tfCOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCOUTActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Guest Name:");

        jLabel3.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Contact Info:");

        jLabel4.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Room Number:");

        jLabel5.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Check-IN");

        jLabel6.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Check-OUT");

        btnDelete.setBackground(new java.awt.Color(204, 255, 255));
        btnDelete.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 204, 255));
        btnUpdate.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRead.setBackground(new java.awt.Color(255, 204, 204));
        btnRead.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(255, 255, 204));
        btnCreate.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(204, 255, 204));
        btnClear.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Pristina", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hotel_building_stars_holiday_vacation_icon_196768 (1).png"))); // NOI18N
        jLabel7.setText("   Hotel Booking System");

        tfRID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRIDActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Room Type:");

        jLabel9.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Room Price:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addGap(36, 36, 36)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRead)
                                .addGap(34, 34, 34)
                                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfGN, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfRID, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfRN, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfCI, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfRT, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tfCIN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfCOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tfRP, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(81, 81, 81))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(85, 85, 85)))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6)
                            .addGap(33, 33, 33)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfCIN, tfCOUT});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreate, btnDelete, btnRead, btnUpdate});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfCI, tfGN, tfRID, tfRN, tfRP, tfRT});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnRead)
                                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnDelete)
                                .addComponent(btnUpdate))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfGN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(tfCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCIN, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(tfCOUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addGap(180, 180, 180))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tfCI, tfGN, tfRID, tfRN, tfRP, tfRT});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tfCIN, tfCOUT});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClear, btnCreate, btnDelete, btnRead, btnUpdate});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();
        if(conn !=null);
        
         String reservation_id = tfRID.getText();
         String guest_name = tfGN.getText();
        String contact_info = tfCI.getText();
        String room_number = tfRN.getText();
        String room_type= tfRT.getText();
        String room_price = tfRP.getText();
        String check_in = tfCIN.getText();
        String check_out = tfCOUT.getText();


    // Input Validation
    if (reservation_id.isEmpty() || guest_name.isEmpty()||contact_info.isEmpty() || room_number.isEmpty() || room_type.isEmpty() || room_price.isEmpty() || check_in.isEmpty()|| check_out.isEmpty()) {
        JOptionPane.showMessageDialog(this,
                "Please fill in all the required fields",
                "Missing Information",
                JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Prepare and execute the SQL statement
        String sql = "INSERT INTO reservation(reservation_id, guest_name, contact_info, room_number, room_type,room_price,check_in, check_out ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, reservation_id);
        pstmt.setString(2, guest_name);
        pstmt.setString(3, contact_info);
        pstmt.setString(4, room_number);
        pstmt.setString(5, room_type);
        pstmt.setString(6,room_price);
        pstmt.setString(7, check_in);
        pstmt.setString(8, check_out);

        int rowsInserted = pstmt.executeUpdate();

        if (rowsInserted > 0 ) {
            JOptionPane.showMessageDialog(this, "A new Reservation was added successfully!");
            System.out.println("A new Reservation was added successfully!\n");

            // Update the table after successful database insertion
            DefaultTableModel model = (DefaultTableModel) tableReservation.getModel();
            model.addRow(new Object[]{reservation_id, guest_name ,contact_info, room_number, room_type,room_price,check_in, check_out});

            // Clear the text fields
            tfRID.setText("");
            tfGN.setText("");
            tfCI.setText("");
            tfRN.setText("");
            tfRT.setText("");
            tfRP.setText("");
            tfCIN.setText("");
            tfCOUT.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add Reservation. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        pstmt.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBConnection.closeConnection(conn);

    }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        // TODO add your handling code here:
         Connection conn =DBConnection.getConnection();
        if(conn !=null);
            try{
                String sql;
                PreparedStatement pstmt;
               
                if(tfRID.getText().trim().isEmpty()){
                    sql = "SELECT * FROM reservation";
                    pstmt = conn.prepareStatement(sql);
                   
                }else{
                   
                    sql = "SELECT * FROM reservation WHERE reservation_id = ?";
                    pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1,Integer.parseInt(tfRID.getText()));
                }
               
                ResultSet rs = pstmt.executeQuery();
               
                DefaultTableModel model = (DefaultTableModel)tableReservation.getModel();
                model.setRowCount(0);
               
                while(rs.next()){
                   
                    int reservation_id = rs.getInt("reservation_id");
                    String guest_name = rs.getString("guest_name");
                    String contact_info = rs.getString("contact_info");
                    String room_number= rs.getString("room_number");
                    String room_type= rs.getString("room_type");
                    String room_price= rs.getString("room_price");
                    String check_in = rs.getString("check_in");
                    String check_out = rs.getString("check_out");
                    
                   
                    model.addRow(new Object[]{reservation_id, guest_name ,contact_info, room_number,room_type, room_price, check_in, check_out});
                   
                }
                rs.close();
                pstmt.close();
               
            }catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println("SQL Error: " + e.getMessage());
            }finally {
                DBConnection.closeConnection(conn);
            }


        
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String reservation_id =      tfRID.getText();
         String guest_name=        tfGN.getText();
         String contact_info=        tfCI.getText();
         String room_number =        tfRN.getText();
         String room_type =     tfRT.getText();
         String room_price =    tfRP.getText();
         String check_in =     tfCIN.getText();
         String check_out=    tfCOUT.getText();
        
       

       
       
        if(reservation_id.isEmpty() || guest_name.isEmpty()||contact_info.isEmpty() || room_number.isEmpty() || room_type.isEmpty()|| room_price.isEmpty()|| check_in.isEmpty()|| check_out.isEmpty()){
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Try Again!",
                    JOptionPane.ERROR_MESSAGE);
        }else {
            DefaultTableModel model = (DefaultTableModel)tableReservation.getModel();
            model.addRow(new Object[]{reservation_id, guest_name ,contact_info, room_number,room_type,room_price, check_in, check_out});
           

        Connection conn = DBConnection.getConnection();
        if(conn !=null);
        try{
           
            String sql = "UPDATE reservation SET guest_name = ?, contact_info = ?, room_number = ?, room_type = ? ,room_price =? ,check_in = ?, check_out = ? WHERE reservation_id = ?";
           
            PreparedStatement pstmt = conn.prepareStatement(sql);
           
            pstmt.setString(1,tfGN.getText());
            pstmt.setString(2,tfCI.getText());
            pstmt.setString(3,(tfRN.getText()));
             pstmt.setString(4,tfCIN.getText());
            pstmt.setString(5,tfCOUT.getText());
            pstmt.setString(6,tfCIN.getText());
            pstmt.setString(7,tfCOUT.getText());
            pstmt.setInt(8,Integer.parseInt(tfRID.getText()));
           
            int rowsUpdated = pstmt.executeUpdate();
            if(rowsUpdated > 0) {
                model.setRowCount(0);
                JOptionPane.showMessageDialog(this,"A new Reservation was Updated successfully!");
                System.out.println("An Reservation was updated successfully!\n");
                
            tfRID.setText("");
            tfGN.setText("");
            tfCI.setText("");
            tfRN.setText("");
            tfRT.setText("");
            tfRP.setText("");
            tfCIN.setText("");
            tfCOUT.setText("");
                
        }else{
                System.out.println("No record found with the specified ID\n");
               
            }
            pstmt.close();
        }catch (SQLException | NumberFormatException e){
		JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", 	JOptionPane.ERROR_MESSAGE);
                System.out.println("SQL Error: " + e.getMessage()) ;
        }finally{
            DBConnection.closeConnection(conn);
        }
       
           
           
        }

        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();
if (conn != null) {
    try {
        String sql = "DELETE FROM reservation WHERE reservation_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);

        int reservationId = Integer.parseInt(tfRID.getText());

        // Confirmation dialog
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete reservation ID " + reservationId + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            pstmt.setInt(1, reservationId);
            int rowsDeleted = pstmt.executeUpdate();

            if (rowsDeleted > 0) {
                System.out.println("A Reservation was deleted successfully!");
                // Update the table model
                int row = tableReservation.getSelectedRow();
                if (row >= 0) {
                    DefaultTableModel model = (DefaultTableModel) tableReservation.getModel();
                    model.removeRow(row);
                }
            } else {
                System.out.println("No record found with the specified ID");
                JOptionPane.showMessageDialog(this, "No record found with the specified ID", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        DBConnection.closeConnection(conn);
    }
} else {
    JOptionPane.showMessageDialog(this, "Connection to database failed.", "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
            tfRID.setText("");
            tfGN.setText("");
            tfCI.setText("");
            tfRN.setText("");
            tfRT.setText("");
            tfRP.setText("");
            tfCIN.setText("");
            tfCOUT.setText("");

    }//GEN-LAST:event_btnClearActionPerformed

    private void tfGNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfGNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfGNActionPerformed

    private void tfCIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCIActionPerformed

    private void tfCOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCOUTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCOUTActionPerformed

    private void tfRIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableReservation;
    private javax.swing.JTextField tfCI;
    private javax.swing.JTextField tfCIN;
    private javax.swing.JTextField tfCOUT;
    private javax.swing.JTextField tfGN;
    private javax.swing.JTextField tfRID;
    private javax.swing.JTextField tfRN;
    private javax.swing.JTextField tfRP;
    private javax.swing.JTextField tfRT;
    // End of variables declaration//GEN-END:variables
}
